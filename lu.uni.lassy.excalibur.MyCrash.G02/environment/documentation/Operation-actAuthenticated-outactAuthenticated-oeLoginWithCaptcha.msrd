/*
@author excalibur
@date Tue May 15 21:47:45 CEST 2018
*/


@@Operation
lu.uni.lassy.excalibur.MyCrash.G02.environment.actAuthenticated.outactAuthenticated.oeLoginWithCaptcha
//parameters
@parameter
lu.uni.lassy.excalibur.MyCrash.G02.environment.actAuthenticated.outactAuthenticated.oeLoginWithCaptcha.ALogin
"The username of the actor."
@parameter
lu.uni.lassy.excalibur.MyCrash.G02.environment.actAuthenticated.outactAuthenticated.oeLoginWithCaptcha.APassword
"The key to login of the actor."
@parameter
lu.uni.lassy.excalibur.MyCrash.G02.environment.actAuthenticated.outactAuthenticated.oeLoginWithCaptcha.ACaptcha
"The captcha the actor sent to the system to compare to the captcha to solve."
@endParameters

@description "This operation can and must only be done when capReq boolean value is true. Used to authenticate the
user and to also authenticate the the user is not a robot.
 "
//preProtocol descriptions
@preP
"PreP 1 the system is started"
@preP
"PreP 2 the actor is currently not logged in."
@preP
"PreP 3 the actor has to also sent a captcha to login."
@endPreP
//preFunctional descriptions
@preF
"PreF 1 none "
@endPreF
//postFunctional descriptions
@postF 
"PostF 1 if the login and password provided by the actor correspond to the ones that belong to the
ctAuthenticated instance he is related to then the captcha field will also be verified. Upon success,
a welcome message is sent to the actor (the logged status is changed as a post-protocol condition);
else the actor is notified that he gave incorrect data and all the administrator actors existing in
the environment are notified of an intrusion attempt. "
@endPostF
//postProtocol descriptions
@postP 
"PostP 1 if the authentication information is correct (also the captcha matching) then the actor is
known to be logged in! (i.e. the associated ctAuthenticated instance with given login and password
is considered logged) "
@endPostP
//example
@example" "
